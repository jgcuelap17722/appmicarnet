navigator.browserSpecs = (function () {
  var ua = navigator.userAgent, tem,
      M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
  if (/trident/i.test(M[1])) {
      tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
      return { navegador: 'IE', version: (tem[1] || '') };
  }
  if (M[1] === 'Chrome') {
      tem = ua.match(/\b(OPR|Edge)\/(\d+)/);
      if (tem != null) return { navegador: tem[1].replace('OPR', 'Opera'), version: tem[2] };
  }
  M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
  if ((tem = ua.match(/version\/(\d+)/i)) != null)
      M.splice(1, 1, tem[1]);
  return { navegador: M[0], version: M[1] };
})();

var navegadores = ["Chrome", "Firefox", "Opera", "Safari", "Edge"];
var versiones = [85, 85, 70, 7, 85];

var navegador = navigator.browserSpecs;
var compatible = false;

isWebView = navigator.userAgent.includes('wv');
is_uiwebview = /(iphone|iPod|ipad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent);
is_mac = /(Mac).*AppleWebKit/.test(navigator.userAgent);
is_safari = /Safari/.test(navigator.userAgent);

for (var i = 0; i < navegadores.length; i++) {
  if (navegador.navegador.toLowerCase() == navegadores[i].toLowerCase() && !compatible) {
      if (parseInt(navegador.version) >= versiones[i]) {
          compatible = true;
          continue;
      }
  }
}


if(isWebView  || is_uiwebview || (is_mac && !is_safari)){
  //is webview
}else if(!compatible){
  location.href = './assets/navegador/navegador.html'
}

